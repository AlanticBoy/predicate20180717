/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2018-04-29 13:19:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class accuratebaidumap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        body, html, #allmap {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-family: \"微软雅黑\";\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script type=\"text/javascript\"\r\n");
      out.write("            src=\"http://api.map.baidu.com/api?v=2.0&ak=LHTaSBIi7XLzYzD5aj4RK5cO4zrcAxtk\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"../js/map.js\"></script>\r\n");
      out.write("    <title>批量转换</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"setTimeout()\">\r\n");
      out.write("<div id=\"allmap\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    // 百度地图API功能\r\n");
      out.write("    var map = new BMap.Map(\"allmap\");\r\n");
      out.write("    map.centerAndZoom(new BMap.Point(116.3786889372559, 39.90762965106183), 15);\r\n");
      out.write("    var i;\r\n");
      out.write("    var markers = [];\r\n");
      out.write("    map.addEventListener(\"click\", function(e) {\r\n");
      out.write("        e.point.lng\r\n");
      out.write("        alert(e.point.lng + \",\" + e.point.lat);\r\n");
      out.write("    });\r\n");
      out.write("    //注意：百度和谷歌的经纬度坐标顺序是相反的。\r\n");
      out.write("    var points = [\r\n");
      out.write("        new BMap.Point(116.3786889372559, 39.907629651061835),\r\n");
      out.write("        new BMap.Point(116.38632786853032, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.39534009082035, 39.907432133833574),\r\n");
      out.write("        new BMap.Point(116.40624058825688, 39.90789300648029),\r\n");
      out.write("        new BMap.Point(116.41913701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41813701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41713701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41613701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41513701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41313701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41453701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.4186889372559, 39.907629651061835),\r\n");
      out.write("        new BMap.Point(116.3786889372559, 39.907629651061835),\r\n");
      out.write("        new BMap.Point(116.38632786853032, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.39534009082035, 39.907432133833574),\r\n");
      out.write("        new BMap.Point(116.40624058825688, 39.90789300648029),\r\n");
      out.write("        new BMap.Point(116.41913701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41813701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41713701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41613701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41513701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41313701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.41453701159672, 39.90795884517671),\r\n");
      out.write("        new BMap.Point(116.4199889372559, 39.907629651061835)\r\n");
      out.write("        /* new BMap.Point(116.41437011596723, 39.94795884517671) */];\r\n");
      out.write("    function callback(xyResults) {\r\n");
      out.write("        var xyResult = null;\r\n");
      out.write("        for ( var index in xyResults) {\r\n");
      out.write("            xyResult = xyResults[index];\r\n");
      out.write("            if (xyResult.error != 0) {\r\n");
      out.write("                continue;\r\n");
      out.write("            }//出错就直接返回;\r\n");
      out.write("            var point = new BMap.Point(xyResult.x, xyResult.y);\r\n");
      out.write("            var marker = new BMap.Marker(point);\r\n");
      out.write("            map.addOverlay(marker);\r\n");
      out.write("            map.setCenter(point);// 由于写了这句，每一个被设置的点都是中心点的过程\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    setTimeout(function() {\r\n");
      out.write("        BMap.Convertor.transMore(points, 0, callback); //一秒之后开始进行坐标转换。参数2，表示是从GCJ-02坐标到百度坐标。参数0，表示是从GPS到百度坐标\r\n");
      out.write("    }, 1000);\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
