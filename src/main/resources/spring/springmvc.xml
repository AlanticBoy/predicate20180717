<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置springmvc三大器-->
    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/jsps/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--配置处理器映射器-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <!--配置处理器适配器-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
    <!--springmvc三大器配置完毕-->


    <context:component-scan base-package="com.predicate.*.controller,com.fusong.controller"/>

    <!--配置文件上传解析器-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">
            <value>10485760</value>
        </property>
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <!-- 加载ehcache缓存配置文件
        说明：在这里我遇到了这样一个问题，当使用@Service等注解的方式将类声明到配置文件中时，
        就需要将缓存配置import到主配置文件中，否则缓存会不起作用
        如果是通过<bean>声明到配置文件中时，
        则只需要在web.xml的contextConfigLocation中加入applicationContext-ehcache.xml即可，
        不过还是推荐使用如下方式吧，因为这样不会有任何问题
    -->
    <import resource="classpath:spring/applicationContext_ehcache.xml"/>
    <!--配置拦截器-->
    <!--
    对于使用该拦截器，它只能拦截controller里的路径，对于jsp页面是不能拦截的。
    解决方法之一：把私有jsp页面放到WEB-INF下，共有的jsp放到webapp下-->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash; 进行拦截：/**表示拦截所有controller &ndash;&gt;
            &lt;!&ndash;这样的话，表示只拦截/quartz/playSound.action。对于别的action，直接通过&ndash;&gt;
            <mvc:mapping path="/**"/>
            <bean class="com.predicate.user.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!--开启shiro的注解功能,这个配置必须加到springmvc.xml里。并且proxyTargetClass为true-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <!--##############################配置AspectJ对Controller里的方法进行增强#####################################-->
    <!--当为true时使用CGLIB代理，false时使用JDK做代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--使用AspectJ代理，sprigmvc.xml里用<Bean>声明class。同时在具体类上加@Aspect-->
    <bean class="com.predicate.user.aspect.UserControllerAspect"/>
    <!--配置proxy-target-class="true"则强制使用了CGLIB生成代理，mybatis的mapper没有默认构造方法，会报错：-->
    <!--Could not generate CGLIB subclass of class [class com.sun.proxy.$Proxy22]:
    Common causes of this problem include using a final class or a non-visible class;
    nested exception is java.lang.IllegalArgumentException: Cannot subclass final class class com.sun.proxy.$Proxy22
    -->
    <!--##############################配置AspectJ对Controller里的方法进行增强#####################################-->


</beans>